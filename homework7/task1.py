'''
 Урок 7
 Задание 1

Реализовать класс Matrix (матрица). Обеспечить
перегрузку конструктора класса (метод init()),
который должен принимать данные (список списков)
для формирования матрицы.

Подсказка: матрица — система некоторых математических
величин, расположенных в виде прямоугольной схемы.

Примеры матриц вы найдете в методичке.
Следующий шаг — реализовать перегрузку метода str()
для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода add() для
реализации операции сложения двух объектов класса
Matrix (двух матриц). Результатом сложения должна
быть новая матрица.
Подсказка: сложение элементов матриц выполнять
поэлементно — первый элемент первой строки первой
матрицы складываем с первым элементом первой строки
второй матрицы и т.д.
'''

class Matrix:
    def __init__(self, elements):
        #Проверяем валидность входных данных
        #(все вложенные списки в elements должны быть одной длины)
        self.n = len(elements[0])
        for row in elements:
            if len(row) != self.n:
                raise "Ошибка: невалидная матрица"
        self.m = len(elements)
        self.elements = list(elements)  #Если входной аргумент elements - кортеж,
                                        #то преобразуем в список
    def __str__(self):
        return (f"Матрица размером {self.m}x{self.n}:\n" +
                "\n".join(map(str, self.elements)))

    def __add__(self, matr):
        if self.m != matr.m or self.n != matr.n:
            raise "Ошибка: матрицы не равны по размерам!"
        result = []
        for row1, row2 in zip(self.elements, matr.elements):
            result_row = []
            for element1, element2 in zip(row1, row2):
                result_row.append(element1 + element2)
            result.append(result_row)
        return Matrix(result)


def task1():
    a = Matrix(((2, -3), (6, -8), (-2.4, 0)))
    print("Первая матрица...")
    print(a)
    b = Matrix(((4, 5), (6, 7), (8, 9)))
    print("\nВторая матрица...")
    print(b)
    c = a + b
    print("\nСложение завершено, получили...")
    print(c)


if __name__ == "__main__":
    task1()
